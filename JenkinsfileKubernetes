node{
    stage("Git Clone"){
        git credentialsId: 'GIT_LOGIN', url: 'https://github.com/sriramdas84814/spring-boot-mongo-docker.git'
    }
    stage ("Maven Clean Build")
    {
    def mavenHome=tool name: "Maven-3.8.1" ,type:"maven"
    def mavenCMD=" ${mavenHome}/bin/mvn "
    sh " ${mavenCMD} clean package"
    }
    stage("Build Docker Image")
    {
    sh "docker build -t rathnam84814/spring-boot-mongo ."
    }
    stage('Push Docker Image'){
     withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS')]) {
        sh "docker login -u rathnam84814 -p ${DOCKER_HUB_CREDENTIALS}"
        }
        
        sh "docker push rathnam84814/spring-boot-mongo "
     }
    stage("Deploy To Kuberates Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNETES_CLUSTER_CONFIG',
         enableConfigSubstitution: true
        )
     }
    
}


